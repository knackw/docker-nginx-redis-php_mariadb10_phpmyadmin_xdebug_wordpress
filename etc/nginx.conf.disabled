user                            www;
worker_processes                auto;

error_log                       /var/log/nginx/error.log warn;
pid                             /var/run/nginx.pid;

events {
    worker_connections          1024;
}

http {
    include                     /etc/nginx/mime.types;
    default_type                application/octet-stream;
    sendfile                    on;
    access_log                  /var/log/nginx/access.log;
    keepalive_timeout           3000;
    fastcgi_cache_path          /var/run/NGINX-cache levels=1:2 keys_zone=WORDPRESS:100m inactive=60m;
    fastcgi_cache_key           "$scheme$request_method$host$request_uri";

    server {
        listen                  80;
        root                    /www;
        index                   index.php;
        server_name             localhost;
    	client_max_body_size	64m;
        error_page              500 502 503 504  /50x.html;

        # Disable logging for favicon and robots.txt
        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
            try_files $uri /index.php?$args;
        }

        # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
        # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
        location ~ /\. {
            deny all;
        }

        # Deny access to any files with a .php extension in the uploads directory
        # Works in sub-directory installs and also in multisite network
        # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
        location ~* /(?:uploads|files)/.*\.php$ {
            deny all;
        }
        # End Restrictions

        # Caching
        set $skip_cache 0;

        # POST requests and urls with a query string should always go to PHP
        if ($request_method = POST) {
          set $no_cache 1;
        }
        if ($query_string != "") {
          set $skip_cache 1;
        }

        # Don't cache uris containing the following segments
        if ($request_uri ~* "(/wp-admin/|/xmlrpc.php|/wp-(app|cron|login|register|mail).php|wp-.*.php|/feed/|index.php|wp-comments-popup.php|wp-links-opml.php|wp-locations.php|sitemap(_index)?.xml|[a-z0-9_-]+-sitemap([0-9]+)?.xml)") {
          set $skip_cache 1;
        }

        # Don't use the cache for logged in users or recent commenters
        if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
          set $skip_cache 1;
        }
        #end Caching

        # Enable Gzip compression in NGNIX.
        gzip on;
        add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        expires off;
        gzip_disable "msie6";
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_buffers 32 8k;
        gzip_http_version 1.1;
        gzip_min_length 0;
        gzip_types text/plain application/javascript text/css text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype;

        location = /50x.html {
            root /var/lib/nginx/html;
        }

        location / {
            rewrite / /index.php last;
        }

        location /wp-admin/ {
            rewrite /wp-admin/ /wp-admin/index.php last;
        }

        location ~ \.php$ {
              fastcgi_pass 127.0.0.1:9000;
              fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
              include fastcgi_params;
              fastcgi_intercept_errors off;
              # enable cache
              fastcgi_cache WORDPRESS;
              fastcgi_cache_valid 200 301 302 60m;
              fastcgi_cache_use_stale error timeout updating invalid_header http_500 http_503;
              fastcgi_cache_min_uses 1;
              fastcgi_cache_lock on;
              fastcgi_cache_bypass $skip_cache;
              fastcgi_no_cache $skip_cache;
              add_header X-FastCGI-Cache $upstream_cache_status;
        }

        if ($http_accept ~* "webp"){
            #rewrite ^/(.*).(jpe?g|png)$ /app/plugins/webp-express/wod/webp-on-demand.php?xsource=x$request_filename&wp-content=app break;
        }

        # Directives to send expires headers and turn off 404 error logging.
        location ~* ^.+\.(eot|otf|woff|woff2|ttf|rss|atom|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
            access_log off; log_not_found off; expires max;
        }

        # Media: images, icons, video, audio send expires headers.
        location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm)$ {
          expires 1M;
          access_log off;
          add_header Cache-Control "public";
        }

        # CSS and Javascript send expires headers.
        location ~* \.(?:css|js)$ {
          expires 1y;
          access_log off;
          add_header Cache-Control "public";
        }

        # HTML send expires headers.
        location ~* \.(html)$ {
          expires 7d;
          access_log off;
          add_header Cache-Control "public";
        }

        # Browser caching of static assets.
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|pdf)$ {
          expires 7d;
          add_header Cache-Control "public, no-transform";
        }
    }
}